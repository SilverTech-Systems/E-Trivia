# Generated by Django 4.2.12 on 2024-05-13 15:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('idgame', models.AutoField(db_column='IdGame', primary_key=True, serialize=False)),
                ('timestarted', models.DateTimeField(db_column='TimeStarted')),
            ],
            options={
                'db_table': 'game',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Multiplayerqueue',
            fields=[
                ('idqueue', models.AutoField(db_column='IdQueue', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=18, null=True)),
                ('timejoined', models.DateTimeField(blank=True, db_column='TimeJoined', null=True)),
            ],
            options={
                'db_table': 'multiplayerqueue',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Questionsll',
            fields=[
                ('idll', models.AutoField(db_column='IdLL', primary_key=True, serialize=False)),
                ('prompt', models.CharField(blank=True, db_column='Prompt', max_length=18, null=True)),
            ],
            options={
                'db_table': 'questionsll',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Questionsqow',
            fields=[
                ('idqow', models.AutoField(db_column='IdQOW', primary_key=True, serialize=False)),
                ('question', models.CharField(db_column='Question', max_length=50)),
                ('correct', models.CharField(db_column='Correct', max_length=50)),
                ('incorrect1', models.CharField(db_column='Incorrect1', max_length=50)),
                ('incorrect2', models.CharField(db_column='Incorrect2', max_length=45)),
                ('incorrect3', models.CharField(db_column='Incorrect3', max_length=45)),
            ],
            options={
                'db_table': 'questionsqow',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idqueue', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('idresult', models.IntegerField(db_column='IdResult', primary_key=True, serialize=False)),
                ('points1', models.IntegerField(db_column='Points1')),
                ('points2', models.IntegerField(db_column='Points2')),
                ('points3', models.IntegerField(db_column='Points3')),
                ('points4', models.IntegerField(db_column='Points4')),
                ('won', models.TextField(db_column='Won')),
                ('idgame', models.ForeignKey(db_column='IdGame', on_delete=django.db.models.deletion.DO_NOTHING, to='Etrivia.game')),
                ('iduser', models.ForeignKey(db_column='IdUser', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'result',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Llfield',
            fields=[
                ('idllfield', models.AutoField(db_column='IdLLField', primary_key=True, serialize=False)),
                ('text', models.CharField(db_column='Text', max_length=50)),
                ('idll', models.ForeignKey(db_column='IdLL', on_delete=django.db.models.deletion.DO_NOTHING, to='Etrivia.questionsll')),
            ],
            options={
                'db_table': 'llfield',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='game',
            name='idll',
            field=models.ForeignKey(blank=True, db_column='IdLL', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Etrivia.questionsll'),
        ),
        migrations.AddField(
            model_name='game',
            name='idqow1',
            field=models.ForeignKey(blank=True, db_column='IdQOW1', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Etrivia.questionsqow'),
        ),
        migrations.AddField(
            model_name='game',
            name='idqow2',
            field=models.ForeignKey(blank=True, db_column='IdQOW2', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='game_idqow2_set', to='Etrivia.questionsqow'),
        ),
        migrations.AddField(
            model_name='game',
            name='idqow3',
            field=models.ForeignKey(blank=True, db_column='IdQOW3', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='game_idqow3_set', to='Etrivia.questionsqow'),
        ),
        migrations.AddField(
            model_name='game',
            name='idqow4',
            field=models.ForeignKey(blank=True, db_column='IdQOW4', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='game_idqow4_set', to='Etrivia.questionsqow'),
        ),
        migrations.AddField(
            model_name='game',
            name='idqow5',
            field=models.ForeignKey(blank=True, db_column='IdQOW5', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='game_idqow5_set', to='Etrivia.questionsqow'),
        ),
        migrations.AddField(
            model_name='game',
            name='iduser1',
            field=models.ForeignKey(db_column='IdUser1', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='iduser2',
            field=models.ForeignKey(db_column='IdUser2', on_delete=django.db.models.deletion.DO_NOTHING, related_name='game_iduser2_set', to=settings.AUTH_USER_MODEL),
        ),
    ]
